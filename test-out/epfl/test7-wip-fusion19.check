-- full graph
TP(Sym(2),IntPlus(Sym(1),Const(1)))
TP(Sym(3),SingletonInLoop(Block(Sym(2)),Sym(1)))
TP(Sym(4),SimpleLoop(Const(100),Sym(1),MultiArrayElem(Block(Sym(3)))))
TP(Sym(5),ArrayIndex(Sym(4),Const(0)))
TP(Sym(6),Reflect(Print(Sym(5)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(8),Reflect(Print(Sym(7)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(6))))
TP(Sym(9),Reify(Const(1),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(8))))
TP(Sym(10),Reflect(SingletonInLoop(Block(Sym(9)),Sym(7)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(6))))
TP(Sym(11),Reify(Sym(10),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(10))))
TP(Sym(12),Reflect(SimpleLoop(Const(100),Sym(7),MultiArrayElem(Block(Sym(11)))),Summary(true,false,false,false,false,false,List(),List(),List(),List()),List(Sym(6))))
TP(Sym(13),ArrayIndex(Sym(12),Const(1)))
TP(Sym(14),Reflect(Print(Sym(13)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(12))))
TP(Sym(15),Reify(Sym(14),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(6), Sym(12), Sym(14))))

-- before transformation
val x4 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x4(x1) = x2
}
val x5 = x4.apply(0)
val x6 = println(x5)
val x12 = new Array[Int](100)
for (x7 <- 0 until 100) {
val x8 = println(x7)
x12(x7) = 1
}
val x13 = x12.apply(1)
val x14 = println(x13)

-- vertical transformation

(VFT) No producers found for cons Sym(4)

(VFT) No producers found for cons Sym(12)
(VFT) Cons Sym(12) not fused but mirrored to Sym(21) because of fixed shape

(VFT) all vertically fused: 

-- after vertical transformation
val x4 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x4(x1) = x2
}
val x5 = x4.apply(0)
val x16 = println(x5)
val x21 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x17 = println(x1)
x21(x1) = 1
}
val x22 = x21.apply(1)
val x23 = println(x22)

-- horizontal transformation
(HFT) Recording Sym(4), no fusion
(HFT) The candidate Sym(21) cannot be fused with the existing FusedLoopSet(shape = Const(100), indexSym = Sym(1), loopSyms = List(Sym(4))) because the candidate set depends on Sym(4)
(HFT) Recording Sym(21), no fusion
(HFT) - remapping index to unique: Sym(1) -> Sym(26)
(HFT) - new loop symbol: Sym(21) -> Sym(31)

(HFT) all horizontally fused: 

-- after horizontal transformation
val x4 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x4(x1) = x2
}
val x5 = x4.apply(0)
val x25 = println(x5)
val x31 = new Array[Int](100)
for (x26 <- 0 until 100) {
val x27 = println(x26)
x31(x26) = 1
}
val x32 = x31.apply(1)
val x33 = println(x32)

-- fusion
val x4 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x4(x1) = x2
}
val x5 = x4.apply(0)
val x25 = println(x5)
val x31 = new Array[Int](100)
for (x26 <- 0 until 100) {
val x27 = println(x26)
x31(x26) = 1
}
val x32 = x31.apply(1)
val x33 = println(x32)
-- done
