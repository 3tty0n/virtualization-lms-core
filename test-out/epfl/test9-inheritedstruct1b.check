/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
var x3: scala.reflect.Manifest[scala.virtualization.lms.epfl.test9.PolarComplex] = manifest[scala.virtualization.lms.epfl.test9.PolarComplex]
val x1 = x0
var x4: Double = x1
var x5: Double = 0.0
val x7 = x3
val x8 = x4
val x9 = x5
val x11 = java.lang.Math.cos(x9)
val x12 = x8*x11
val x13 = java.lang.Math.sin(x9)
val x14 = x8*x13
val x15 = Map("clzz"->manifest[scala.virtualization.lms.epfl.test9.CartesianComplex],"re"->x12,"im"->x14) //MyClassTag(scala.virtualization.lms.epfl.test9.CartesianComplex)
val x16 = println(x15)
x16
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
Map(clzz -> scala.virtualization.lms.epfl.test9.CartesianComplex, re -> 3.0, im -> 0.0)
