----- Sym(26) / Set((re,Sym(27)), (im,Sym(28)))
TTP(List(Sym(8)),ThinDef(Minus(Const(0.0),Sym(7))))
TTP(List(Sym(10)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Block(Sym(8))))))
TTP(List(Sym(13)),ThinDef(Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())))
TTP(List(Sym(11)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Block(Sym(7))))))
TTP(List(Sym(14)),ThinDef(Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())))
TTP(List(Sym(16)),ThinDef(OrderingGT(Sym(0),Const(7))))
TTP(List(Sym(17)),ThinDef(Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(24)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17)))))
TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(20)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13)))))
TTP(List(Sym(21)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14)))))
TTP(List(Sym(25)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21)))))
TTP(List(Sym(26), Sym(27), Sym(28)),SimpleFatIfThenElse(Sym(16),List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))),List(Block(Sym(25)), Block(Sym(20)), Block(Sym(21)))))
TTP(List(Sym(4)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))))))
TTP(List(Sym(30)),ThinDef(Reflect(Assign(Variable(Sym(13)),Sym(4)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26)))))
TTP(List(Sym(2)),ThinDef(Minus(Const(0.0),Sym(1))))
TTP(List(Sym(5)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(2))))))
TTP(List(Sym(31)),ThinDef(Reflect(Assign(Variable(Sym(14)),Sym(5)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26)))))
TTP(List(Sym(32)),ThinDef(Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(30)))))
TTP(List(Sym(33)),ThinDef(Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(31)))))
TTP(List(Sym(34)),ThinDef(SimpleStruct(List(Array, Complex),Map(re -> Sym(32), im -> Sym(33)))))
TTP(List(Sym(35)),ThinDef(Reflect(Print(Sym(34)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26)))))
TTP(List(Sym(29)),ThinDef(SimpleStruct(List(Array, Complex),Map(re -> Sym(27), im -> Sym(28)))))
TTP(List(Sym(36)),ThinDef(Reflect(Print(Sym(29)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(35)))))
TTP(List(Sym(37)),ThinDef(Reify(Sym(36),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(30), Sym(31), Sym(32), Sym(33), Sym(35), Sym(36)))))
wtableneg: List()
partitions: List(TTP(List(Sym(4), Sym(5), Sym(10), Sym(11)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayElem(Block(Sym(2))), ArrayElem(Block(Sym(8))), ArrayElem(Block(Sym(7)))))))
--> replace Sym(8)=Minus(Const(0.0),Sym(7)) by Sym(2)=Minus(Const(0.0),Sym(1))
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Block(Sym(8))))
--> replace Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Block(Sym(8)))) by Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2))))
lhs changed! will add to innerScope: 
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(7) -> Sym(1),Sym(1) -> Sym(1)
--> replace Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) by Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Block(Sym(7))))
--> replace Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Block(Sym(7)))) by Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1))))
lhs changed! will add to innerScope: 
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(1) -> Sym(1)
--> replace Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) by Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List())
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(1) -> Sym(1)
--> replace Sym(20)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) by Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))
--> replace Sym(21)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) by Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(1) -> Sym(1)
--> replace Sym(25)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(19), Sym(20), Sym(21))) by Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41)))
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(10) -> Sym(5),Sym(20) -> Sym(40),Sym(8) -> Sym(2),Sym(11) -> Sym(4),Sym(13) -> Sym(38),Sym(7) -> Sym(1),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(26), Sym(27), Sym(28)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(25)), Block(Sym(20)), Block(Sym(21)))
--> replace Sym(26)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(25))),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) by Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39)))
--> replace Sym(27)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(25)),Block(Sym(20))) by Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40)))
--> replace Sym(28)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(25)),Block(Sym(21))) by Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41)))
lhs changed! will add to innerScope: TP(Sym(43),Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39)))),TP(Sym(44),Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40)))),TP(Sym(45),Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))))
-- fatten effectful if/then/else TP(Sym(43),Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))))
-- fatten effectful if/then/else TP(Sym(43),Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))))
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(27) -> Sym(44),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(1) -> Sym(1)
--> replace Sym(30)=Reflect(Assign(Variable(Sym(13)),Sym(4)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(26))) by Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43)))
--> replace Sym(31)=Reflect(Assign(Variable(Sym(14)),Sym(5)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(26))) by Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43)))
--> replace Sym(32)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(30))) by Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46)))
--> replace Sym(33)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(31))) by Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47)))
--> replace Sym(34)=SimpleStruct(List(Array, Complex),Map(re -> Sym(32), im -> Sym(33))) by Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49)))
--> replace Sym(35)=Reflect(Print(Sym(34)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26))) by Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43)))
--> replace Sym(29)=SimpleStruct(List(Array, Complex),Map(re -> Sym(27), im -> Sym(28))) by Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45)))
--> replace Sym(36)=Reflect(Print(Sym(29)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(26), Sym(35))) by Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51)))
--> replace Sym(37)=Reify(Sym(36),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(13), Sym(14), Sym(26), Sym(30), Sym(31), Sym(32), Sym(33), Sym(35), Sym(36))) by Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53)))
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(5) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(4) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38))) syms Sym(38),Sym(38) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39))) syms Sym(39),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41))) syms Sym(19),Sym(40),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41)))
skipping mirror operation Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))) syms Sym(16),Sym(24),Sym(42),Sym(38),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40))) syms Sym(16),Sym(24),Sym(4),Sym(42),Sym(40) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))) syms Sym(16),Sym(24),Sym(5),Sym(42),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43))) syms Sym(38),Sym(4),Sym(38),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43))) syms Sym(39),Sym(5),Sym(39),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46))) syms Sym(38),Sym(38),Sym(46) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47))) syms Sym(39),Sym(39),Sym(47) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49))) syms Sym(48),Sym(49) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43))) syms Sym(50),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45))) syms Sym(44),Sym(45) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51))) syms Sym(52),Sym(43),Sym(51) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53))) syms Sym(53),Sym(38),Sym(39),Sym(43),Sym(46),Sym(47),Sym(48),Sym(49),Sym(51),Sym(53) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(5) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(4) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38))) syms Sym(38),Sym(38) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39))) syms Sym(39),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41))) syms Sym(19),Sym(40),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41)))
skipping mirror operation Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))) syms Sym(16),Sym(24),Sym(42),Sym(38),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40))) syms Sym(16),Sym(24),Sym(4),Sym(42),Sym(40) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))) syms Sym(16),Sym(24),Sym(5),Sym(42),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43))) syms Sym(38),Sym(4),Sym(38),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43))) syms Sym(39),Sym(5),Sym(39),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46))) syms Sym(38),Sym(38),Sym(46) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47))) syms Sym(39),Sym(39),Sym(47) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49))) syms Sym(48),Sym(49) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43))) syms Sym(50),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45))) syms Sym(44),Sym(45) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51))) syms Sym(52),Sym(43),Sym(51) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53))) syms Sym(53),Sym(38),Sym(39),Sym(43),Sym(46),Sym(47),Sym(48),Sym(49),Sym(51),Sym(53) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(5) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(4) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38))) syms Sym(38),Sym(38) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39))) syms Sym(39),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41))) syms Sym(19),Sym(40),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41)))
skipping mirror operation Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))) syms Sym(16),Sym(24),Sym(42),Sym(38),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40))) syms Sym(16),Sym(24),Sym(4),Sym(42),Sym(40) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))) syms Sym(16),Sym(24),Sym(5),Sym(42),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43))) syms Sym(38),Sym(4),Sym(38),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43))) syms Sym(39),Sym(5),Sym(39),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46))) syms Sym(38),Sym(38),Sym(46) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47))) syms Sym(39),Sym(39),Sym(47) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49))) syms Sym(48),Sym(49) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43))) syms Sym(50),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45))) syms Sym(44),Sym(45) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51))) syms Sym(52),Sym(43),Sym(51) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53))) syms Sym(53),Sym(38),Sym(39),Sym(43),Sym(46),Sym(47),Sym(48),Sym(49),Sym(51),Sym(53) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(5) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(4) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38))) syms Sym(38),Sym(38) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39))) syms Sym(39),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41))) syms Sym(19),Sym(40),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41)))
skipping mirror operation Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))) syms Sym(16),Sym(24),Sym(42),Sym(38),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40))) syms Sym(16),Sym(24),Sym(4),Sym(42),Sym(40) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))) syms Sym(16),Sym(24),Sym(5),Sym(42),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43))) syms Sym(38),Sym(4),Sym(38),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43))) syms Sym(39),Sym(5),Sym(39),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46))) syms Sym(38),Sym(38),Sym(46) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47))) syms Sym(39),Sym(39),Sym(47) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49))) syms Sym(48),Sym(49) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43))) syms Sym(50),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45))) syms Sym(44),Sym(45) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51))) syms Sym(52),Sym(43),Sym(51) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53))) syms Sym(53),Sym(38),Sym(39),Sym(43),Sym(46),Sym(47),Sym(48),Sym(49),Sym(51),Sym(53) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(2)=Minus(Const(0.0),Sym(1)) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Block(Sym(2))))
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(5)), List(ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(38)=Reflect(NewVar(Sym(5)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(5) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Block(Sym(1))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(4)), List(ArrayElem(Block(Sym(1)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(39)=Reflect(NewVar(Sym(4)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(4) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(17)=Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(24)=Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17))) syms Sym(17) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38))) syms Sym(38),Sym(38) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(41)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39))) syms Sym(39),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(19)=Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms  subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(42)=Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41))) syms Sym(19),Sym(40),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat if/then/else: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41)))
skipping mirror operation Sym(43)=Reflect(IfThenElse(Sym(16),Block(Sym(24)),Block(Sym(42))),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(),List(),List()),List(Sym(38), Sym(39))) syms Sym(16),Sym(24),Sym(42),Sym(38),Sym(39) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(44)=Phi(Sym(16),Block(Sym(24)),Block(Sym(4)),Block(Sym(42)),Block(Sym(40))) syms Sym(16),Sym(24),Sym(4),Sym(42),Sym(40) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(45)=Phi(Sym(16),Block(Sym(24)),Block(Sym(5)),Block(Sym(42)),Block(Sym(41))) syms Sym(16),Sym(24),Sym(5),Sym(42),Sym(41) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
came up with: List(Sym(43), Sym(44), Sym(45)), if Sym(16) then List(Block(Sym(24)), Block(Sym(4)), Block(Sym(5))) else List(Block(Sym(42)), Block(Sym(40)), Block(Sym(41))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(46)=Reflect(Assign(Variable(Sym(38)),Sym(4)),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(Sym(38)),List(Sym(38))),List(Sym(38), Sym(43))) syms Sym(38),Sym(4),Sym(38),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(47)=Reflect(Assign(Variable(Sym(39)),Sym(5)),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(Sym(39)),List(Sym(39))),List(Sym(39), Sym(43))) syms Sym(39),Sym(5),Sym(39),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(48)=Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38), Sym(46))) syms Sym(38),Sym(38),Sym(46) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(49)=Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39), Sym(47))) syms Sym(39),Sym(39),Sym(47) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(50)=SimpleStruct(List(Array, Complex),Map(re -> Sym(48), im -> Sym(49))) syms Sym(48),Sym(49) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(51)=Reflect(Print(Sym(50)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43))) syms Sym(50),Sym(43) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(52)=SimpleStruct(List(Array, Complex),Map(re -> Sym(44), im -> Sym(45))) syms Sym(44),Sym(45) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(53)=Reflect(Print(Sym(52)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(43), Sym(51))) syms Sym(52),Sym(43),Sym(51) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(54)=Reify(Sym(53),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(38), Sym(39), Sym(43), Sym(46), Sym(47), Sym(48), Sym(49), Sym(51), Sym(53))) syms Sym(53),Sym(38),Sym(39),Sym(43),Sym(46),Sym(47),Sym(48),Sym(49),Sym(51),Sym(53) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
need to transform rhs of fat loop: List(Sym(4), Sym(5), Sym(10), Sym(11)), List(ArrayElem(Block(Sym(1))), ArrayElem(Block(Sym(2))), ArrayElem(Block(Sym(8))), ArrayElem(Block(Sym(7))))
skipping mirror operation Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(1)))) syms Sym(1) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
skipping mirror operation Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))) syms Sym(2) subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
lhs changed! will add to innerScope: 
came up with: List(Sym(4), Sym(5)), List(ArrayElem(Block(Sym(1))), ArrayElem(Block(Sym(2)))) with subst Sym(34) -> Sym(50),Sym(10) -> Sym(5),Sym(8) -> Sym(2),Sym(20) -> Sym(40),Sym(36) -> Sym(53),Sym(29) -> Sym(52),Sym(27) -> Sym(44),Sym(33) -> Sym(49),Sym(11) -> Sym(4),Sym(26) -> Sym(43),Sym(32) -> Sym(48),Sym(7) -> Sym(1),Sym(13) -> Sym(38),Sym(14) -> Sym(39),Sym(21) -> Sym(41),Sym(35) -> Sym(51),Sym(30) -> Sym(46),Sym(31) -> Sym(47),Sym(28) -> Sym(45),Sym(25) -> Sym(42),Sym(37) -> Sym(54),Sym(1) -> Sym(1)
try once more ...
wtableneg: List()
partitions: List(TTP(List(Sym(4), Sym(5)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayElem(Block(Sym(2)))))))
no changes, we're done
super.focusExactScopeFat with result changed from List(Sym(37)) to List(Sym(54))
TTP(List(Sym(2)),ThinDef(Minus(Const(0.0),Sym(1))))
TTP(List(Sym(17)),ThinDef(Reflect(Print(Const(foobar true)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(24)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(17)))))
TTP(List(Sym(40)),ThinDef(Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))))
TTP(List(Sym(41)),ThinDef(Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))))
TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
TTP(List(Sym(42)),ThinDef(Reify(Const(()),Summary(true,true,false,false,false,List(Sym(38), Sym(39)),List(Sym(38), Sym(39)),List(),List()),List(Sym(19), Sym(40), Sym(41)))))
effect ordering changed: expected Sym(19),Sym(40),Sym(41) got List(Sym(40)),List(Sym(41)),List(Sym(19))
error: violated ordering of effects
  missing symbols: 
  expected:
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
    TTP(List(Sym(40)),ThinDef(Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))))
    TTP(List(Sym(41)),ThinDef(Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))))
  actual:
    TTP(List(Sym(40)),ThinDef(Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))))
    TTP(List(Sym(41)),ThinDef(Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))))
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
  missing:
  note: there is nothing missing so the different order might in fact be ok (artifact of new effect handling? TODO)
effect ordering changed: expected Sym(19),Sym(40),Sym(41) got List(Sym(40)),List(Sym(41)),List(Sym(19))
error: violated ordering of effects
  missing symbols: 
  expected:
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
    TTP(List(Sym(40)),ThinDef(Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))))
    TTP(List(Sym(41)),ThinDef(Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))))
  actual:
    TTP(List(Sym(40)),ThinDef(Reflect(ReadVar(Variable(Sym(38))),Summary(false,false,false,false,false,List(Sym(38)),List(Sym(38)),List(),List()),List(Sym(38)))))
    TTP(List(Sym(41)),ThinDef(Reflect(ReadVar(Variable(Sym(39))),Summary(false,false,false,false,false,List(Sym(39)),List(Sym(39)),List(),List()),List(Sym(39)))))
    TTP(List(Sym(19)),ThinDef(Reflect(Print(Const(foobar false)),Summary(true,true,false,false,false,List(),List(),List(),List()),List())))
  missing:
  note: there is nothing missing so the different order might in fact be ok (artifact of new effect handling? TODO)
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
var x4 = new Array[Double](100)
var x5 = new Array[Double](100)
for (x1 <- 0 until 100) {
val x2 = 0.0-x1
x4(x1) = x1
x5(x1) = x2
}
var x38: Array[Double] = x5
var x39: Array[Double] = x4
val x16 = x0 > 7
// TODO: use vars instead of tuples to return multiple values
val (x43,x44,x45) = if (x16) {
val x17 = println("foobar true")
((),x4,x5)
} else {
val x40 = x38
val x41 = x39
val x19 = println("foobar false")
((),x40,x41)
}
x38 = x4
x39 = x5
val x48 = x38
val x49 = x39
val x50 = Map("re"->x48,"im"->x49) //Array Complex
val x51 = println(x50)
val x52 = Map("re"->x44,"im"->x45) //Array Complex
val x53 = println(x52)
val x36 = x53
x36
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
