promoting to effect: Sym(24)=Reflect(IfThenElse(Sym(16),Sym(4),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14)))
depends on  Sym(13)
depends on  Sym(14)
promoting to effect: Sym(25)=Reflect(IfThenElse(Sym(16),Sym(5),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14)))
depends on  Sym(13)
depends on  Sym(14)
wtableneg: List()
partitions: List(TTP(List(Sym(10), Sym(11), Sym(4), Sym(5)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(8)), ArrayElem(Sym(7)), ArrayElem(Sym(1)), ArrayElem(Sym(2))))))
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(7) -> Sym(7),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(4)), List(ArrayElem(Sym(1)))
--> replace Sym(4)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(1))) by Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7)))
lhs changed! will add to innerScope: 
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(18)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reify(Sym(17),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(17),Sym(17),Sym(18) subst Sym(7) -> Sym(7),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(24)=Reflect(IfThenElse(Sym(16),Sym(4),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) by Sym(35)=Reflect(IfThenElse(Sym(16),Sym(11),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14)))
--> replace Sym(2)=Minus(Const(0.0),Sym(1)) by Sym(8)=Minus(Const(0.0),Sym(7))
need to transform rhs of fat loop: List(Sym(5)), List(ArrayElem(Sym(2)))
--> replace Sym(5)=SimpleLoop(Const(100),Sym(1),ArrayElem(Sym(2))) by Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8)))
lhs changed! will add to innerScope: 
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(2) -> Sym(8),Sym(24) -> Sym(35),Sym(7) -> Sym(7),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(22)=Reify(Sym(18),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(18),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(24) -> Sym(35),Sym(7) -> Sym(7),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(25)=Reflect(IfThenElse(Sym(16),Sym(5),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) by Sym(36)=Reflect(IfThenElse(Sym(16),Sym(10),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14)))
--> replace Sym(27)=Reflect(Assign(Variable(Sym(13)),Sym(4)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(24), Sym(25))) by Sym(37)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(35), Sym(36)))
--> replace Sym(28)=Reflect(Assign(Variable(Sym(14)),Sym(5)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(24), Sym(25))) by Sym(38)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(35), Sym(36)))
--> replace Sym(29)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(27))) by Sym(39)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(37)))
--> replace Sym(30)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(28))) by Sym(40)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(38)))
error: don't know how to mirror Struct(Complex,Map(re -> Sym(29), im -> Sym(30)))
skipping mirror operation Sym(32)=Reflect(Print(Sym(31)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(31) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(24), im -> Sym(25)))
skipping mirror operation Sym(33)=Reflect(Print(Sym(26)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(32))) syms Sym(26),Sym(32) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
--> replace Sym(34)=Reify(Sym(33),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14))),List(Sym(13), Sym(14), Sym(24), Sym(25), Sym(27), Sym(28), Sym(29), Sym(30), Sym(32), Sym(33))) by Sym(41)=Reify(Sym(33),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14))),List(Sym(13), Sym(14), Sym(35), Sym(36), Sym(37), Sym(38), Sym(39), Sym(40), Sym(32), Sym(33)))
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(18)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reify(Sym(17),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(17),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(35)=Reflect(IfThenElse(Sym(16),Sym(11),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(11),Sym(21),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(22)=Reify(Sym(18),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(18),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(36)=Reflect(IfThenElse(Sym(16),Sym(10),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(10),Sym(22),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(37)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(35), Sym(36))) syms Sym(13),Sym(11),Sym(13),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(35), Sym(36))) syms Sym(14),Sym(10),Sym(14),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(37))) syms Sym(13),Sym(13),Sym(37) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(38))) syms Sym(14),Sym(14),Sym(38) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(29), im -> Sym(30)))
skipping mirror operation Sym(32)=Reflect(Print(Sym(31)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(31) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(24), im -> Sym(25)))
skipping mirror operation Sym(33)=Reflect(Print(Sym(26)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(32))) syms Sym(26),Sym(32) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reify(Sym(33),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14))),List(Sym(13), Sym(14), Sym(35), Sym(36), Sym(37), Sym(38), Sym(39), Sym(40), Sym(32), Sym(33))) syms Sym(33),Sym(13),Sym(14),Sym(35),Sym(36),Sym(37),Sym(38),Sym(39),Sym(40),Sym(32),Sym(33) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(18)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reify(Sym(17),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(17),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(35)=Reflect(IfThenElse(Sym(16),Sym(11),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(11),Sym(21),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(22)=Reify(Sym(18),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(18),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(36)=Reflect(IfThenElse(Sym(16),Sym(10),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(10),Sym(22),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(37)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(35), Sym(36))) syms Sym(13),Sym(11),Sym(13),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(35), Sym(36))) syms Sym(14),Sym(10),Sym(14),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(37))) syms Sym(13),Sym(13),Sym(37) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(38))) syms Sym(14),Sym(14),Sym(38) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(29), im -> Sym(30)))
skipping mirror operation Sym(32)=Reflect(Print(Sym(31)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(31) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(24), im -> Sym(25)))
skipping mirror operation Sym(33)=Reflect(Print(Sym(26)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(32))) syms Sym(26),Sym(32) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reify(Sym(33),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14))),List(Sym(13), Sym(14), Sym(35), Sym(36), Sym(37), Sym(38), Sym(39), Sym(40), Sym(32), Sym(33))) syms Sym(33),Sym(13),Sym(14),Sym(35),Sym(36),Sym(37),Sym(38),Sym(39),Sym(40),Sym(32),Sym(33) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(8)=Minus(Const(0.0),Sym(7)) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10)), List(ArrayElem(Sym(8)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(10)), List(ArrayElem(Sym(8))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(13)=Reflect(NewVar(Sym(10)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(10) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(11)), List(ArrayElem(Sym(7)))
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
came up with: List(Sym(11)), List(ArrayElem(Sym(7))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(14)=Reflect(NewVar(Sym(11)),Summary(false,false,false,false,true,List(),List(),List(),List()),List()) syms Sym(11) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(16)=OrderingGT(Sym(0),Const(7)) syms Sym(0) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(17)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13))) syms Sym(13),Sym(13) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(18)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14))) syms Sym(14),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(21)=Reify(Sym(17),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(17),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(35)=Reflect(IfThenElse(Sym(16),Sym(11),Sym(21)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(11),Sym(21),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(22)=Reify(Sym(18),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(),List()),List(Sym(17), Sym(18))) syms Sym(18),Sym(17),Sym(18) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(36)=Reflect(IfThenElse(Sym(16),Sym(10),Sym(22)),Summary(false,false,false,false,false,List(Sym(13), Sym(14)),List(),List(),List()),List(Sym(13), Sym(14))) syms Sym(16),Sym(10),Sym(22),Sym(13),Sym(14) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(37)=Reflect(Assign(Variable(Sym(13)),Sym(11)),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(Sym(13)),List(Sym(13))),List(Sym(13), Sym(35), Sym(36))) syms Sym(13),Sym(11),Sym(13),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(38)=Reflect(Assign(Variable(Sym(14)),Sym(10)),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(Sym(14)),List(Sym(14))),List(Sym(14), Sym(35), Sym(36))) syms Sym(14),Sym(10),Sym(14),Sym(35),Sym(36) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(39)=Reflect(ReadVar(Variable(Sym(13))),Summary(false,false,false,false,false,List(Sym(13)),List(Sym(13)),List(),List()),List(Sym(13), Sym(37))) syms Sym(13),Sym(13),Sym(37) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(40)=Reflect(ReadVar(Variable(Sym(14))),Summary(false,false,false,false,false,List(Sym(14)),List(Sym(14)),List(),List()),List(Sym(14), Sym(38))) syms Sym(14),Sym(14),Sym(38) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(29), im -> Sym(30)))
skipping mirror operation Sym(32)=Reflect(Print(Sym(31)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()) syms Sym(31) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
error: don't know how to mirror Struct(Complex,Map(re -> Sym(24), im -> Sym(25)))
skipping mirror operation Sym(33)=Reflect(Print(Sym(26)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(32))) syms Sym(26),Sym(32) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(41)=Reify(Sym(33),Summary(true,true,false,false,false,List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14)),List(Sym(13), Sym(14))),List(Sym(13), Sym(14), Sym(35), Sym(36), Sym(37), Sym(38), Sym(39), Sym(40), Sym(32), Sym(33))) syms Sym(33),Sym(13),Sym(14),Sym(35),Sym(36),Sym(37),Sym(38),Sym(39),Sym(40),Sym(32),Sym(33) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
need to transform rhs of fat loop: List(Sym(10), Sym(11), Sym(4), Sym(5)), List(ArrayElem(Sym(8)), ArrayElem(Sym(7)), ArrayElem(Sym(1)), ArrayElem(Sym(2)))
skipping mirror operation Sym(10)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(8))) syms Sym(8) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
skipping mirror operation Sym(11)=SimpleLoop(Const(100),Sym(7),ArrayElem(Sym(7))) syms Sym(7) subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
lhs changed! will add to innerScope: 
came up with: List(Sym(10), Sym(11)), List(ArrayElem(Sym(8)), ArrayElem(Sym(7))) with subst Sym(2) -> Sym(8),Sym(29) -> Sym(39),Sym(27) -> Sym(37),Sym(24) -> Sym(35),Sym(34) -> Sym(41),Sym(28) -> Sym(38),Sym(30) -> Sym(40),Sym(7) -> Sym(7),Sym(25) -> Sym(36),Sym(5) -> Sym(10),Sym(4) -> Sym(11),Sym(1) -> Sym(7)
try once more ...
wtableneg: List()
partitions: List(TTP(List(Sym(10), Sym(11)),SimpleFatLoop(Const(100),Sym(7),List(ArrayElem(Sym(8)), ArrayElem(Sym(7))))))
no changes, we're done
super.focusExactScopeFat with result changed from List(Sym(34)) to List(Sym(41))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
var x10 = new Array[](100)
var x11 = new Array[](100)
for (x7 <- 0 until 100) {
val x8 = 0.0-x7
x10(x7) = x8
x11(x7) = x7
}
var x13: Any = x10
var x14: Any = x11
val x16 = x0 > 7
val x35 = if (x16) {
x11
} else {
val x17 = x13
val x18 = x14
x17
}
val x36 = if (x16) {
x10
} else {
val x17 = x13
val x18 = x14
x18
}
x13 = x11
x14 = x10
val x39 = x13
val x40 = x14
val x31 = XXX Struct(Complex,Map(re -> Sym(29), im -> Sym(30)))
val x32 = println(x31)
val x26 = XXX Struct(Complex,Map(re -> Sym(24), im -> Sym(25)))
val x33 = println(x26)
x33
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
