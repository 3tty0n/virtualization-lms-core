-- full graph
TP(Sym(1),IntPlus(Sym(0),Const(1)))
TP(Sym(3),Reflect(Print(Sym(2)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(4),Reify(Sym(2),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(3))))
TP(Sym(5),Reflect(SimpleLoop(Const(100),Sym(2),ArrayElem(Block(Sym(4)))),Summary(true,false,false,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(7),ArrayIndex(Sym(5),Const(0)))
TP(Sym(8),Reflect(Print(Sym(7)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(5))))
TP(Sym(9),Reify(Sym(6),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(8))))
TP(Sym(10),Reflect(SimpleLoop(Const(200),Sym(6),ArrayElem(Block(Sym(9)))),Summary(true,false,false,false,false,false,List(),List(),List(),List()),List(Sym(5))))
TP(Sym(11),ArrayIndex(Sym(10),Const(0)))
TP(Sym(12),Reflect(Print(Sym(11)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(10))))
TP(Sym(13),Reflect(Print(Sym(1)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(12))))
TP(Sym(14),Reflect(Print(Sym(7)),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(13))))
TP(Sym(15),Reify(Sym(14),Summary(true,true,false,false,false,false,List(),List(),List(),List()),List(Sym(5), Sym(10), Sym(12), Sym(13), Sym(14))))

-- before transformation
var x5 = new Array[Int](100)
for (x2 <- 0 until 100) {
val x3 = println(x2)
x5(x2) = x2
}
val x7 = x5.apply(0)
var x10 = new Array[Int](200)
for (x6 <- 0 until 200) {
val x8 = println(x7)
x10(x6) = x6
}
val x11 = x10.apply(0)
val x12 = println(x11)
val x1 = x0 + 1
val x13 = println(x1)
val x14 = println(x7)

-- vertical transformation

(VFT) No producers found for TP(Sym(5),Reflect(SimpleLoop(Const(100),Sym(2),ArrayElem(Block(Sym(4)))), ...)), changed to Sym(18) because of existing substitutions or to reflect effects

(VFT) No producers found for TP(Sym(10),Reflect(SimpleLoop(Const(200),Sym(6),ArrayElem(Block(Sym(9)))), ...)), changed to Sym(22) because of existing substitutions or to reflect effects

(VFT) all vertically fused: 

-- after vertical transformation
var x18 = new Array[Int](100)
for (x2 <- 0 until 100) {
val x16 = println(x2)
x18(x2) = x2
}
val x19 = x18.apply(0)
var x22 = new Array[Int](200)
for (x6 <- 0 until 200) {
val x20 = println(x19)
x22(x6) = x6
}
val x23 = x22.apply(0)
val x24 = println(x23)
val x1 = x0 + 1
val x25 = println(x1)
val x26 = println(x19)

-- horizontal transformation
(HFT) Recording Sym(18), no fusion
(HFT) - new loop symbol: Sym(18) -> Sym(30)
(HFT) Recording Sym(22), no fusion
(HFT) - new loop symbol: Sym(22) -> Sym(34)

(HFT) all horizontally fused: 

-- after horizontal transformation
var x30 = new Array[Int](100)
for (x2 <- 0 until 100) {
val x28 = println(x2)
x30(x2) = x2
}
val x31 = x30.apply(0)
var x34 = new Array[Int](200)
for (x6 <- 0 until 200) {
val x32 = println(x31)
x34(x6) = x6
}
val x35 = x34.apply(0)
val x36 = println(x35)
val x1 = x0 + 1
val x37 = println(x1)
val x38 = println(x31)

-- fusion
var x30 = new Array[Int](100)
for (x2 <- 0 until 100) {
val x28 = println(x2)
x30(x2) = x2
}
val x31 = x30.apply(0)
var x34 = new Array[Int](200)
for (x6 <- 0 until 200) {
val x32 = println(x31)
x34(x6) = x6
}
val x35 = x34.apply(0)
val x36 = println(x35)
val x1 = x0 + 1
val x37 = println(x1)
val x38 = println(x31)
-- done
