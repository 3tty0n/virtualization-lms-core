ignoring read of Reify(): Reify(Sym(15),Summary(false,false,false,false,false,List(Sym(2), Sym(3), Sym(4)),List(Sym(2), Sym(3), Sym(4)),List(),List()),List(Sym(12), Sym(13), Sym(14)))
ignoring read of Reify(): Reify(Sym(20),Summary(false,false,false,false,false,List(Sym(7), Sym(8), Sym(9)),List(Sym(7), Sym(8), Sym(9)),List(),List()),List(Sym(17), Sym(18), Sym(19)))
ignoring read of Reify(): Reify(Const(()),Summary(false,false,false,false,false,List(Sym(2), Sym(3), Sym(4)),List(Sym(2), Sym(3), Sym(4)),List(),List()),List(Sym(12), Sym(13), Sym(14)))
ignoring read of Reify(): Reify(Const(()),Summary(false,false,false,false,false,List(Sym(7), Sym(8), Sym(9)),List(Sym(7), Sym(8), Sym(9)),List(),List()),List(Sym(17), Sym(18), Sym(19)))
ignoring read of Reify(): Reify(Sym(49),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(2), Sym(3), Sym(4), Sym(7), Sym(8), Sym(9), Sym(28), Sym(29), Sym(30), Sym(32), Sym(33), Sym(34), Sym(41), Sym(42), Sym(43), Sym(45), Sym(46), Sym(47), Sym(49)))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Int)=>(Any)) {
def apply(x0:Int): Any = {
var x2: scala.reflect.Manifest[scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$PolarComplex] = scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$PolarComplex
var x3: Double = 0.0
var x4: Int = x0
var x7: scala.reflect.Manifest[scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$PolarComplex] = scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$PolarComplex
var x8: Int = x0
var x9: Double = 0.0
val x11 = x0 > 0
val x24 = if (x11) {
val x12 = x2
x12
} else {
val x17 = x7
x17
}
var x28: Any = x24
val x25 = if (x11) {
val x13 = x3
x13
} else {
val x18 = x8
x18
}
var x29: Any = x25
val x26 = if (x11) {
val x14 = x4
x14
} else {
val x19 = x9
x19
}
var x30: Any = x26
val x32 = x28
val x33 = x29
val x34 = x30
var x41: scala.reflect.Manifest[scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$CartesianComplex] = scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$CartesianComplex
val x36 = java.lang.Math.cos(x34)
val x37 = x33*x36
var x42: Double = x37
val x38 = java.lang.Math.sin(x34)
val x39 = x33*x38
var x43: Double = x39
val x45 = x41
val x46 = x42
val x47 = x43
val x48 = Map("clzz"->x45,"re"->x46,"im"->x47) //MyClassTag(scala.virtualization.lms.epfl.test9.TestInheritedStruct$$anonfun$testStruct4b$1$$anon$9@3894dcd0.type#scala.virtualization.lms.epfl.test9.ComplexInheritBase$CartesianComplex)
val x49 = println(x48)
x49
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
