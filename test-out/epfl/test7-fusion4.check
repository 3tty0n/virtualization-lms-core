wtableneg: List()
partitions: List(TTP(List(Sym(2), Sym(6), Sym(10)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayIfElem(Sym(5),Block(Sym(4))), ReduceElem(Block(Sym(9)))))))
considering TTP(List(Sym(4)),ThinDef(ArrayIndex(Sym(2),Sym(3))))
replace TTP(List(Sym(4)),ThinDef(ArrayIndex(Sym(2),Sym(3)))) at 0 within TTP(List(Sym(2), Sym(6), Sym(10)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayIfElem(Sym(5),Block(Sym(4))), ReduceElem(Block(Sym(9))))))
considering TTP(List(Sym(9)),ThinDef(ArrayIndex(Sym(6),Sym(8))))
replace TTP(List(Sym(9)),ThinDef(ArrayIndex(Sym(6),Sym(8)))) at 1 within TTP(List(Sym(2), Sym(6), Sym(10)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayIfElem(Sym(5),Block(Sym(4))), ReduceElem(Block(Sym(9))))))
try once more ...
wtableneg: List()
partitions: List(TTP(List(Sym(2), Sym(15), Sym(19)),SimpleFatLoop(Const(100),Sym(1),List(ArrayElem(Block(Sym(1))), ArrayIfElem(Sym(14),Block(Sym(1))), ReduceIfElem(Sym(14),Block(Sym(1)))))))
no changes, we're done
super.focusExactScopeFat with result changed from List(Sym(12)) to List(Sym(21))
/*****************************************
  Emitting Generated Code                  
*******************************************/
class Test extends ((Unit)=>(Unit)) {
def apply(x0:Unit): Unit = {
var x19 = 0
for (x1 <- 0 until 100) {
val x14 = x1 > 50
if (x14) x19 += x1
}
val x20 = println(x19)
val x11 = x20
x11
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
