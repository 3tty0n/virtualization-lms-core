TP(Sym(1),Lambda(<function1>))
TP(Sym(2),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(0)))
TP(Sym(3),First(Sym(2)))
TP(Sym(4),Second(Sym(2)))
TP(Sym(5),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(4)))
TP(Sym(6),Reify(Sym(5),List(Sym(2), Const(Test(Sym(3),s)))))
TP(Sym(7),Lambda(<function1>))
TP(Sym(8),OrElse(List(Sym(6), Pure(Const(Failure())))))
TP(Sym(9),Lambda(<function1>))
TP(Sym(10),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(8)))
TP(Sym(11),Lambda(<function1>))
TP(Sym(12),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(10)))
TP(Sym(13),First(Sym(12)))
TP(Sym(14),Second(Sym(12)))
TP(Sym(15),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(14)))
TP(Sym(16),Reify(Sym(15),List(Sym(12), Const(Test(Sym(13),c)))))
TP(Sym(17),Lambda(<function1>))
TP(Sym(18),OrElse(List(Sym(16), Pure(Const(Failure())))))
TP(Sym(19),Reify(Sym(18),List(Sym(10))))
TP(Sym(20),Lambda(<function1>))
TP(Sym(21),OrElse(List(Sym(19), Pure(Const(Failure())))))
TP(Sym(22),Lambda(<function1>))
TP(Sym(23),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(21)))
TP(Sym(24),Lambda(<function1>))
TP(Sym(25),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(23)))
TP(Sym(26),First(Sym(25)))
TP(Sym(27),Second(Sym(25)))
TP(Sym(28),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(27)))
TP(Sym(29),Reify(Sym(28),List(Sym(25), Const(Test(Sym(26),a)))))
TP(Sym(30),Lambda(<function1>))
TP(Sym(31),OrElse(List(Sym(29), Pure(Const(Failure())))))
TP(Sym(32),Reify(Sym(31),List(Sym(23))))
TP(Sym(33),Lambda(<function1>))
TP(Sym(34),OrElse(List(Sym(32), Pure(Const(Failure())))))
TP(Sym(35),Lambda(<function1>))
TP(Sym(36),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(34)))
TP(Sym(37),Lambda(<function1>))
TP(Sym(38),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(36)))
TP(Sym(39),First(Sym(38)))
TP(Sym(40),Second(Sym(38)))
TP(Sym(41),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(40)))
TP(Sym(42),Reify(Sym(41),List(Sym(38), Const(Test(Sym(39),l)))))
TP(Sym(43),Lambda(<function1>))
TP(Sym(44),OrElse(List(Sym(42), Pure(Const(Failure())))))
TP(Sym(45),Reify(Sym(44),List(Sym(36))))
TP(Sym(46),Lambda(<function1>))
TP(Sym(47),OrElse(List(Sym(45), Pure(Const(Failure())))))
TP(Sym(48),Lambda(<function1>))
TP(Sym(49),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(47)))
TP(Sym(50),Lambda(<function1>))
TP(Sym(51),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(49)))
TP(Sym(52),First(Sym(51)))
TP(Sym(53),Second(Sym(51)))
TP(Sym(54),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(53)))
TP(Sym(55),Reify(Sym(54),List(Sym(51), Const(Test(Sym(52),a)))))
TP(Sym(56),Lambda(<function1>))
TP(Sym(57),OrElse(List(Sym(55), Pure(Const(Failure())))))
TP(Sym(58),Reify(Sym(57),List(Sym(49))))
TP(Sym(59),Lambda(<function1>))
TP(Sym(60),OrElse(List(Sym(58), Pure(Const(Failure())))))
TP(Sym(61),Lambda(<function1>))
TP(Sym(62),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(60)))
TP(Sym(63),Lambda(<function1>))
TP(Sym(64),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(62)))
TP(Sym(65),First(Sym(64)))
TP(Sym(66),Second(Sym(64)))
TP(Sym(67),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(66)))
TP(Sym(68),Reify(Sym(67),List(Sym(64), Const(Test(Sym(65), )))))
TP(Sym(69),Lambda(<function1>))
TP(Sym(70),OrElse(List(Sym(68), Pure(Const(Failure())))))
TP(Sym(71),Lambda(<function1>))
TP(Sym(72),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(70)))
TP(Sym(73),Lambda(<function1>))
TP(Sym(74),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(72)))
TP(Sym(75),First(Sym(74)))
TP(Sym(76),Second(Sym(74)))
TP(Sym(77),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(76)))
TP(Sym(78),Reify(Sym(77),List(Sym(74), Const(Test(Sym(75),r)))))
TP(Sym(79),Lambda(<function1>))
TP(Sym(80),OrElse(List(Sym(78), Pure(Const(Failure())))))
TP(Sym(81),Lambda(<function1>))
TP(Sym(82),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(80)))
TP(Sym(83),Lambda(<function1>))
TP(Sym(84),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(82)))
TP(Sym(85),First(Sym(84)))
TP(Sym(86),Second(Sym(84)))
TP(Sym(87),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(86)))
TP(Sym(88),Reify(Sym(87),List(Sym(84), Const(Test(Sym(85),u)))))
TP(Sym(89),Lambda(<function1>))
TP(Sym(90),OrElse(List(Sym(88), Pure(Const(Failure())))))
TP(Sym(91),Reify(Sym(90),List(Sym(82))))
TP(Sym(92),Lambda(<function1>))
TP(Sym(93),OrElse(List(Sym(91), Pure(Const(Failure())))))
TP(Sym(94),Lambda(<function1>))
TP(Sym(95),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(93)))
TP(Sym(96),Lambda(<function1>))
TP(Sym(97),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(95)))
TP(Sym(98),First(Sym(97)))
TP(Sym(99),Second(Sym(97)))
TP(Sym(100),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(99)))
TP(Sym(101),Reify(Sym(100),List(Sym(97), Const(Test(Sym(98),l)))))
TP(Sym(102),Lambda(<function1>))
TP(Sym(103),OrElse(List(Sym(101), Pure(Const(Failure())))))
TP(Sym(104),Reify(Sym(103),List(Sym(95))))
TP(Sym(105),Lambda(<function1>))
TP(Sym(106),OrElse(List(Sym(104), Pure(Const(Failure())))))
TP(Sym(107),Lambda(<function1>))
TP(Sym(108),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(106)))
TP(Sym(109),Lambda(<function1>))
TP(Sym(110),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(108)))
TP(Sym(111),First(Sym(110)))
TP(Sym(112),Second(Sym(110)))
TP(Sym(113),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(112)))
TP(Sym(114),Reify(Sym(113),List(Sym(110), Const(Test(Sym(111),e)))))
TP(Sym(115),Lambda(<function1>))
TP(Sym(116),OrElse(List(Sym(114), Pure(Const(Failure())))))
TP(Sym(117),Reify(Sym(116),List(Sym(108))))
TP(Sym(118),Lambda(<function1>))
TP(Sym(119),OrElse(List(Sym(117), Pure(Const(Failure())))))
TP(Sym(120),Lambda(<function1>))
TP(Sym(121),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(119)))
TP(Sym(122),Lambda(<function1>))
TP(Sym(123),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(121)))
TP(Sym(124),First(Sym(123)))
TP(Sym(125),Second(Sym(123)))
TP(Sym(126),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(125)))
TP(Sym(127),Reify(Sym(126),List(Sym(123), Const(Test(Sym(124),s)))))
TP(Sym(128),Lambda(<function1>))
TP(Sym(129),OrElse(List(Sym(127), Pure(Const(Failure())))))
TP(Sym(130),Reify(Sym(129),List(Sym(121))))
TP(Sym(131),Lambda(<function1>))
TP(Sym(132),OrElse(List(Sym(130), Pure(Const(Failure())))))
TP(Sym(133),Reify(Sym(132),List(Sym(72))))
TP(Sym(134),Lambda(<function1>))
TP(Sym(135),OrElse(List(Sym(133), Pure(Const(Failure())))))
TP(Sym(136),Reify(Sym(135),List(Sym(62))))
TP(Sym(137),Lambda(<function1>))
TP(Sym(138),OrElse(List(Sym(136), Pure(Const(Failure())))))
TP(Sym(139),Lambda(<function1>))
TP(Sym(140),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(138)))
TP(Sym(141),Reify(Sym(138),List(Sym(140))))
TP(Sym(142),Lambda(<function1>))
TP(Sym(143),Lambda(<function1>))
TP(Sym(144),Lambda(<function1>))
TP(Sym(145),Lambda(<function1>))
TP(Sym(146),Lambda(<function1>))
TP(Sym(147),Lambda(<function1>))
TP(Sym(148),Lambda(<function1>))
TP(Sym(149),Lambda(<function1>))
TP(Sym(150),Lambda(<function1>))
TP(Sym(151),Lambda(<function1>))
TP(Sym(152),Lambda(<function1>))
TP(Sym(153),Lambda(<function1>))
TP(Sym(154),Lambda(<function1>))
TP(Sym(155),Lambda(<function1>))
TP(Sym(156),Lambda(<function1>))
TP(Sym(157),Lambda(<function1>))
TP(Sym(158),Lambda(<function1>))
TP(Sym(159),Lambda(<function1>))
TP(Sym(160),Lambda(<function1>))
TP(Sym(161),Lambda(<function1>))
TP(Sym(162),Lambda(<function1>))
TP(Sym(163),Lambda(<function1>))
TP(Sym(164),Lambda(<function1>))
TP(Sym(165),Lambda(<function1>))
TP(Sym(166),Lambda(<function1>))
TP(Sym(167),Lambda(<function1>))
TP(Sym(168),Lambda(<function1>))
TP(Sym(169),Reify(Sym(87),List(Sym(84), Const(Test(Sym(85),o)))))
TP(Sym(170),Lambda(<function1>))
TP(Sym(171),OrElse(List(Sym(169), Pure(Const(Failure())))))
TP(Sym(172),Reify(Sym(171),List(Sym(82))))
TP(Sym(173),Lambda(<function1>))
TP(Sym(174),OrElse(List(Sym(172), Pure(Const(Failure())))))
TP(Sym(175),Lambda(<function1>))
TP(Sym(176),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(174)))
TP(Sym(177),Lambda(<function1>))
TP(Sym(178),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(176)))
TP(Sym(179),First(Sym(178)))
TP(Sym(180),Second(Sym(178)))
TP(Sym(181),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(180)))
TP(Sym(182),Reify(Sym(181),List(Sym(178), Const(Test(Sym(179),c)))))
TP(Sym(183),Lambda(<function1>))
TP(Sym(184),OrElse(List(Sym(182), Pure(Const(Failure())))))
TP(Sym(185),Reify(Sym(184),List(Sym(176))))
TP(Sym(186),Lambda(<function1>))
TP(Sym(187),OrElse(List(Sym(185), Pure(Const(Failure())))))
TP(Sym(188),Lambda(<function1>))
TP(Sym(189),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(187)))
TP(Sym(190),Lambda(<function1>))
TP(Sym(191),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(189)))
TP(Sym(192),First(Sym(191)))
TP(Sym(193),Second(Sym(191)))
TP(Sym(194),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(193)))
TP(Sym(195),Reify(Sym(194),List(Sym(191), Const(Test(Sym(192),k)))))
TP(Sym(196),Lambda(<function1>))
TP(Sym(197),OrElse(List(Sym(195), Pure(Const(Failure())))))
TP(Sym(198),Reify(Sym(197),List(Sym(189))))
TP(Sym(199),Lambda(<function1>))
TP(Sym(200),OrElse(List(Sym(198), Pure(Const(Failure())))))
TP(Sym(201),Lambda(<function1>))
TP(Sym(202),Deconstruct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(200)))
TP(Sym(203),Lambda(<function1>))
TP(Sym(204),Deconstruct(class scala.collection.immutable.$colon$colon,Sym(202)))
TP(Sym(205),First(Sym(204)))
TP(Sym(206),Second(Sym(204)))
TP(Sym(207),Construct(class scala.virtualization.lms.epfl.test3.Parsers$Success,Sym(206)))
TP(Sym(208),Reify(Sym(207),List(Sym(204), Const(Test(Sym(205),s)))))
TP(Sym(209),Lambda(<function1>))
TP(Sym(210),OrElse(List(Sym(208), Pure(Const(Failure())))))
TP(Sym(211),Reify(Sym(210),List(Sym(202))))
TP(Sym(212),Lambda(<function1>))
TP(Sym(213),OrElse(List(Sym(211), Pure(Const(Failure())))))
TP(Sym(214),Reify(Sym(213),List(Sym(72))))
TP(Sym(215),Lambda(<function1>))
TP(Sym(216),OrElse(List(Sym(214), Pure(Const(Failure())))))
TP(Sym(217),Reify(Sym(216),List(Sym(62))))
TP(Sym(218),Lambda(<function1>))
TP(Sym(219),OrElse(List(Sym(217), Pure(Const(Failure())))))
TP(Sym(220),OrElse(List(Sym(141), Pure(Sym(219)))))
Pure(Sym(220))
